[{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred.html","title":"FSharp.Data.Fred","content":"QueryParameters \nFred \nSearch \nSeries"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters.html","title":"QueryParameters","content":"QueryParameters \n \nQueryParameters.AggMethod \nAggMethod \nQueryParameters.Frequency \nFrequency \nQueryParameters.OrderByTags \nOrderByTags \nQueryParameters.SearchOrder \nSearchOrder \nQueryParameters.SearchType \nSearchType \nQueryParameters.SortOrder \nSortOrder \nQueryParameters.Units \nUnits"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-aggmethod.html","title":"AggMethod","content":"AggMethod \n \nAggMethod.Average \nAverage \nAggMethod.Sum \nSum \nAggMethod.EndOfPeriod \nEndOfPeriod"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-aggmethod.html#Average","title":"AggMethod.Average","content":"AggMethod.Average \nAverage \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-aggmethod.html#Sum","title":"AggMethod.Sum","content":"AggMethod.Sum \nSum \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-aggmethod.html#EndOfPeriod","title":"AggMethod.EndOfPeriod","content":"AggMethod.EndOfPeriod \nEndOfPeriod \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html","title":"Frequency","content":"Frequency \n \nFrequency.Daily \nDaily \nFrequency.Weekly \nWeekly \nFrequency.Biweekly \nBiweekly \nFrequency.Monthly \nMonthly \nFrequency.Quarterly \nQuarterly \nFrequency.Semiannual \nSemiannual \nFrequency.Annual \nAnnual \nFrequency.WeeklyEndingFriday \nWeeklyEndingFriday \nFrequency.WeeklyEndingThursday \nWeeklyEndingThursday \nFrequency.WeeklyEndingWednesday \nWeeklyEndingWednesday \nFrequency.WeeklyEndingTuesday \nWeeklyEndingTuesday \nFrequency.WeeklyEndingMonday \nWeeklyEndingMonday \nFrequency.WeeklyEndingSunday \nWeeklyEndingSunday \nFrequency.WeeklyEndingSaturday \nWeeklyEndingSaturday \nFrequency.BiweeklyEndingWednesday \nBiweeklyEndingWednesday \nFrequency.BiweeklyEndingMonday \nBiweeklyEndingMonday \nFrequency.Default \nDefault"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Daily","title":"Frequency.Daily","content":"Frequency.Daily \nDaily \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Weekly","title":"Frequency.Weekly","content":"Frequency.Weekly \nWeekly \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Biweekly","title":"Frequency.Biweekly","content":"Frequency.Biweekly \nBiweekly \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Monthly","title":"Frequency.Monthly","content":"Frequency.Monthly \nMonthly \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Quarterly","title":"Frequency.Quarterly","content":"Frequency.Quarterly \nQuarterly \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Semiannual","title":"Frequency.Semiannual","content":"Frequency.Semiannual \nSemiannual \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Annual","title":"Frequency.Annual","content":"Frequency.Annual \nAnnual \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingFriday","title":"Frequency.WeeklyEndingFriday","content":"Frequency.WeeklyEndingFriday \nWeeklyEndingFriday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingThursday","title":"Frequency.WeeklyEndingThursday","content":"Frequency.WeeklyEndingThursday \nWeeklyEndingThursday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingWednesday","title":"Frequency.WeeklyEndingWednesday","content":"Frequency.WeeklyEndingWednesday \nWeeklyEndingWednesday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingTuesday","title":"Frequency.WeeklyEndingTuesday","content":"Frequency.WeeklyEndingTuesday \nWeeklyEndingTuesday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingMonday","title":"Frequency.WeeklyEndingMonday","content":"Frequency.WeeklyEndingMonday \nWeeklyEndingMonday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingSunday","title":"Frequency.WeeklyEndingSunday","content":"Frequency.WeeklyEndingSunday \nWeeklyEndingSunday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#WeeklyEndingSaturday","title":"Frequency.WeeklyEndingSaturday","content":"Frequency.WeeklyEndingSaturday \nWeeklyEndingSaturday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#BiweeklyEndingWednesday","title":"Frequency.BiweeklyEndingWednesday","content":"Frequency.BiweeklyEndingWednesday \nBiweeklyEndingWednesday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#BiweeklyEndingMonday","title":"Frequency.BiweeklyEndingMonday","content":"Frequency.BiweeklyEndingMonday \nBiweeklyEndingMonday \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-frequency.html#Default","title":"Frequency.Default","content":"Frequency.Default \nDefault \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html","title":"OrderByTags","content":"OrderByTags \n \nOrderByTags.SeriesCount \nSeriesCount \nOrderByTags.PopularityTags \nPopularityTags \nOrderByTags.Created \nCreated \nOrderByTags.Name \nName \nOrderByTags.GroupId \nGroupId"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#SeriesCount","title":"OrderByTags.SeriesCount","content":"OrderByTags.SeriesCount \nSeriesCount \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#PopularityTags","title":"OrderByTags.PopularityTags","content":"OrderByTags.PopularityTags \nPopularityTags \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#Created","title":"OrderByTags.Created","content":"OrderByTags.Created \nCreated \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#Name","title":"OrderByTags.Name","content":"OrderByTags.Name \nName \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-orderbytags.html#GroupId","title":"OrderByTags.GroupId","content":"OrderByTags.GroupId \nGroupId \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html","title":"SearchOrder","content":"SearchOrder \n \nSearchOrder.SearchRank \nSearchRank \nSearchOrder.SeriesIdOrder \nSeriesIdOrder \nSearchOrder.Title \nTitle \nSearchOrder.Units \nUnits \nSearchOrder.Frequency \nFrequency \nSearchOrder.SeasonalAdjustment \nSeasonalAdjustment \nSearchOrder.RealTimeStart \nRealTimeStart \nSearchOrder.RealTimeEnd \nRealTimeEnd \nSearchOrder.LastUpdated \nLastUpdated \nSearchOrder.ObservationStart \nObservationStart \nSearchOrder.ObservationEnd \nObservationEnd \nSearchOrder.Popularity \nPopularity \nSearchOrder.GroupPopularity \nGroupPopularity"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#SearchRank","title":"SearchOrder.SearchRank","content":"SearchOrder.SearchRank \nSearchRank \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#SeriesIdOrder","title":"SearchOrder.SeriesIdOrder","content":"SearchOrder.SeriesIdOrder \nSeriesIdOrder \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#Title","title":"SearchOrder.Title","content":"SearchOrder.Title \nTitle \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#Units","title":"SearchOrder.Units","content":"SearchOrder.Units \nUnits \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#Frequency","title":"SearchOrder.Frequency","content":"SearchOrder.Frequency \nFrequency \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#SeasonalAdjustment","title":"SearchOrder.SeasonalAdjustment","content":"SearchOrder.SeasonalAdjustment \nSeasonalAdjustment \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#RealTimeStart","title":"SearchOrder.RealTimeStart","content":"SearchOrder.RealTimeStart \nRealTimeStart \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#RealTimeEnd","title":"SearchOrder.RealTimeEnd","content":"SearchOrder.RealTimeEnd \nRealTimeEnd \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#LastUpdated","title":"SearchOrder.LastUpdated","content":"SearchOrder.LastUpdated \nLastUpdated \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#ObservationStart","title":"SearchOrder.ObservationStart","content":"SearchOrder.ObservationStart \nObservationStart \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#ObservationEnd","title":"SearchOrder.ObservationEnd","content":"SearchOrder.ObservationEnd \nObservationEnd \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#Popularity","title":"SearchOrder.Popularity","content":"SearchOrder.Popularity \nPopularity \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchorder.html#GroupPopularity","title":"SearchOrder.GroupPopularity","content":"SearchOrder.GroupPopularity \nGroupPopularity \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchtype.html","title":"SearchType","content":"SearchType \n \nSearchType.FullText \nFullText \nSearchType.SeriesId \nSeriesId"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchtype.html#FullText","title":"SearchType.FullText","content":"SearchType.FullText \nFullText \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-searchtype.html#SeriesId","title":"SearchType.SeriesId","content":"SearchType.SeriesId \nSeriesId \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-sortorder.html","title":"SortOrder","content":"SortOrder \n \nSortOrder.Ascending \nAscending \nSortOrder.Descending \nDescending"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-sortorder.html#Ascending","title":"SortOrder.Ascending","content":"SortOrder.Ascending \nAscending \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-sortorder.html#Descending","title":"SortOrder.Descending","content":"SortOrder.Descending \nDescending \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html","title":"Units","content":"Units \n \nUnits.Levels \nLevels \nUnits.Change \nChange \nUnits.ChangeFromYearAgo \nChangeFromYearAgo \nUnits.PercentChange \nPercentChange \nUnits.PercentChangeFromYearAgo \nPercentChangeFromYearAgo \nUnits.CompoundedAnnualRateofChange \nCompoundedAnnualRateofChange \nUnits.ContinuouslyCompoundedRateofChange \nContinuouslyCompoundedRateofChange \nUnits.ContinuouslyCompoundedAnnualRateofChange \nContinuouslyCompoundedAnnualRateofChange \nUnits.NaturalLog \nNaturalLog"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#Levels","title":"Units.Levels","content":"Units.Levels \nLevels \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#Change","title":"Units.Change","content":"Units.Change \nChange \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#ChangeFromYearAgo","title":"Units.ChangeFromYearAgo","content":"Units.ChangeFromYearAgo \nChangeFromYearAgo \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#PercentChange","title":"Units.PercentChange","content":"Units.PercentChange \nPercentChange \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#PercentChangeFromYearAgo","title":"Units.PercentChangeFromYearAgo","content":"Units.PercentChangeFromYearAgo \nPercentChangeFromYearAgo \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#CompoundedAnnualRateofChange","title":"Units.CompoundedAnnualRateofChange","content":"Units.CompoundedAnnualRateofChange \nCompoundedAnnualRateofChange \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#ContinuouslyCompoundedRateofChange","title":"Units.ContinuouslyCompoundedRateofChange","content":"Units.ContinuouslyCompoundedRateofChange \nContinuouslyCompoundedRateofChange \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#ContinuouslyCompoundedAnnualRateofChange","title":"Units.ContinuouslyCompoundedAnnualRateofChange","content":"Units.ContinuouslyCompoundedAnnualRateofChange \nContinuouslyCompoundedAnnualRateofChange \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-queryparameters-units.html#NaturalLog","title":"Units.NaturalLog","content":"Units.NaturalLog \nNaturalLog \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html","title":"Fred","content":"Fred \n \nFred.( .ctor ) \n( .ctor ) \nFred.Key \nKey \nFred.Series \nSeries \nFred.loadKey \nloadKey"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html#( .ctor )","title":"Fred.( .ctor )","content":"Fred.( .ctor ) \n( .ctor ) \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html#Key","title":"Fred.Key","content":"Fred.Key \nKey \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html#Series","title":"Fred.Series","content":"Fred.Series \nSeries \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-fred.html#loadKey","title":"Fred.loadKey","content":"Fred.loadKey \nloadKey \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-search.html","title":"Search","content":"Search \n \nSearch.( .ctor ) \n( .ctor ) \nSearch.Summary \nSummary \nSearch.Results \nResults"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-search.html#( .ctor )","title":"Search.( .ctor )","content":"Search.( .ctor ) \n( .ctor ) \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-search.html#Summary","title":"Search.Summary","content":"Search.Summary \nSummary \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-search.html#Results","title":"Search.Results","content":"Search.Results \nResults \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html","title":"Series","content":"Series \n \nSeries.( .ctor ) \n( .ctor ) \nSeries.Categories \nCategories \nSeries.Info \nInfo \nSeries.Observations \nObservations \nSeries.Release \nRelease \nSeries.Search \nSearch \nSeries.Tags \nTags"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#( .ctor )","title":"Series.( .ctor )","content":"Series.( .ctor ) \n( .ctor ) \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Categories","title":"Series.Categories","content":"Series.Categories \nCategories \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Info","title":"Series.Info","content":"Series.Info \nInfo \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Observations","title":"Series.Observations","content":"Series.Observations \nObservations \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Release","title":"Series.Release","content":"Series.Release \nRelease \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Search","title":"Series.Search","content":"Series.Search \nSearch \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/reference/fsharp-data-fred-series.html#Tags","title":"Series.Tags","content":"Series.Tags \nTags \n"},{"uri":"https://nhirschey.github.io/FSharp.Data.Fred/index.html","title":"F# Data FRED\n","content":"(*** hide ***)\n/// example fast binder url: https://mybinder.org/v2/gh/fsprojects/fsharp.formatting/master?urlpath=git-pull?repo=https:/nhirschey.github.com/teaching/gh-pages/fundamentals.ipynb\n\n(**\n\n[![Binder](img/badge-binder.svg)](https://mybinder.org/v2/gh/fsprojects/FSharp.Data.Fred/gh-pages?filepath={{fsdocs-source-basename}}.ipynb)\u0026emsp;\n[![Script](img/badge-script.svg)]({{root}}/{{fsdocs-source-basename}}.fsx)\u0026emsp;\n[![Notebook](img/badge-notebook.svg)]({{root}}/{{fsdocs-source-basename}}.ipynb)\n*)\n\n(*** hide ***)\n//#r \u0022FSharp.Data.dll\u0022\n#r \u0022../src/FSharp.Data.Fred/bin/Release/net5.0/FSharp.Data.Fred.dll\u0022\n#r \u0022nuget: FSharp.Data\u0022\nignore \u003C| FSharp.Data.WorldBankData.GetDataContext() // Force fsi to load F# Data\n\n(**\nF# Data FRED\n===================\n\nF# Data FRED is a library for\n[FRED database](https://fred.stlouisfed.org/) data access\nbased on FSharp.Data. \n\nShort for Federal Reserve Economic Data, FRED is an online database consisting \nof hundreds of thousands of economic data time series from scores of national, \ninternational, public, and private sources.\n\nThis library uses the [FRED API](https://fred.stlouisfed.org/docs/api/fred/) to access the data.\n*)\n\n(**\nYou can use \u0060FSharp.Data.Fred\u0060 in [dotnet interactive](https://github.com/dotnet/interactive) \nnotebooks in [Visual Studio Code](https://code.visualstudio.com/) \nor [Jupyter](https://jupyter.org/), or in F# scripts (\u0060.fsx\u0060 files), \nby referencing the package as follows:\n\n    // Use one of the following two lines\n    #r \u0022nuget: FSharp.Data.Fred\u0022 // Use the latest version\n    #r \u0022nuget: FSharp.Data.Fred,{{fsdocs-package-version}}\u0022 // Use a specific version   \n\n    #r \u0022nuget: FSharp.Data\u0022 //Also load FSharp.Data\n*)\n\nopen FSharp.Data\nopen FSharp.Data.Fred\nopen System //Usefull to access DateTime\n\n(**\n## F# Data FRED\nFirst in order to use the methods you\u0027ll need to create a value with type \u0060Fred\u0060. \n\nFred receives an API key as a parameter (\u0060string\u0060). [Get your FRED API key.](https://fred.stlouisfed.org/docs/api/api_key.html)\n\nExample: \n\n    let apiKey = \u0022insert API key here\u0022\n*)\n\n(***hide***)\nopen System.IO\nlet envVars = System.Environment.GetEnvironmentVariables()\n[\u003CLiteral\u003E]\nlet KeyJson = __SOURCE_DIRECTORY__ \u002B \u0022/../fredKey.json\u0022 \n\nlet apiKey = Fred.loadKey KeyJson\n\nlet myFred = Fred apiKey\n\n(**\nNow you can use the created value \u0060myFred\u0060 to access all the methods in the FRED library.\n*)\n\n(**\n## FRED.Series Module Functions:\n\n1. [Search.](#F-Data-FRED-Series-Search)\n1. [Info.](#F-Data-FRED-Series-Info)\n1. [Categories.](#F-Data-FRED-Series-Categories)\n1. [Release.](#F-Data-FRED-Series-Release)\n1. [Tags.](#F-Data-FRED-Series-Tags)\n1. [Observations.](#F-Data-FRED-Series-Observations)\n*)\n\n(**\n### F# Data FRED: Series.Search\nA collection of economic data series that match the parameters.\n\nThe parameters are the following:\n\n1. **searchText**, required.  \n    The words to match against economic data series.\n1. **searchType**, optional. Default is \u0060SearchType.FullText\u0060.  \n    Determines the type of search to perform.\n    One of the following: \u0060SearchType.FullText\u0060 or \u0060SearchType.SeriesId\u0060.\n    - \u0060SearchType.FullText\u0060 searches series attributes title, units, frequency, and tags by parsing words into stems. \n    This makes it possible for searches like \u0027Industry\u0027 to match series containing related words such as \u0027Industries\u0027. \n    Of course, you can search for multiple words like \u0027money\u0027 and \u0027stock\u0027. Remember to url encode spaces (e.g. \u0060\u0027money%20stock\u0027\u0060).\n    - \u0060SearchType.SeriesId\u0060 performs a substring search on series IDs. Searching for \u0027ex\u0027 will find series containing \u0027ex\u0027 anywhere in a series ID.\n    \u0027*\u0027 can be used to anchor searches and match 0 or more of any character. Searching for \u0027ex*\u0027 will find series containing \u0027ex\u0027 at the beginning of a series ID.\n    Searching for \u0027*ex\u0027 will find series containing \u0027ex\u0027 at the end of a series ID. It\u0027s also possible to put an \u0027*\u0027 in the middle of a string.\n    \u0027m*sl\u0027 finds any series starting with \u0027m\u0027 and ending with \u0027sl\u0027.\n1. **realtimeStart**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n1. **realtimeEnd**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n1. **limit**, optional. Default: \u00601000\u0060.  \n    The maximum number of results to return.\n    integer between \u00601\u0060 and \u00601000\u0060.\n1. **orderBy**, optional. Default: If the value of \u0060searchType\u0060 is \u0060SearchType.FullText\u0060 then the default value of \u0060orderBy\u0060 is \u0060SearchOrder.SearchRank\u0060. If the value of \u0060searchType\u0060 is \u0060SearchType.SeriesId\u0060 then the default value of \u0060orderBy\u0060 is \u0060SearchOrder.SeriesId\u0060.  \n    Order results by values of the specified attribute.\n    One of the following:  \n    \u0060SearchOrder.SearchRank\u0060 \u0060SearchOrder.SeriesIdOrder\u0060 \u0060SearchOrder.Title\u0060 \u0060SearchOrder.Units\u0060 \u0060SearchOrder.Frequency\u0060 \u0060SearchOrder.SeasonalAdjustment\u0060 \n    \u0060SearchOrder.RealTimeStart\u0060 \u0060SearchOrder.RealTimeEnd\u0060 \u0060SearchOrder.LastUpdated\u0060 \u0060SearchOrder.ObservationStart\u0060 \u0060SearchOrder.ObservationEnd\u0060 \u0060SearchOrder.Popularity\u0060 \u0060SearchOrder.GroupPopularity\u0060  \n1. **sortOrder**, optional. Default: If \u0060orderBy\u0060 is equal to \u0060SearchOrder.SearchRank\u0060 or \u0060SearchOrder.Popularity\u0060, then the default value of \u0060sortOrder\u0060 is \u0060SortOrder.Descending\u0060. Otherwise, the default \u0060sortOrder\u0060 is \u0060SortOrder.Ascending\u0060.  \n    Sort results is ascending or descending order for attribute values specified by \u0060orderBy\u0060.  \n\nExamples:\n*)\n\n(**\nSearch for \u0060\u002210-Year\u0022\u0060 text without specifying any optional parameters.\n*)\n\nmyFred.Series.Search(\u002210-Year\u0022).Summary()\n(***include-output***)\n\n(**\nSearch for \u0060\u002210-Year\u0022\u0060 text specifying some optional parameters.\n*)\nmyFred.Series.Search(\u002210-Year\u0022, \n                     searchType = SearchType.FullText, \n                     limit = 3, \n                     orderBy = SearchOrder.GroupPopularity, \n                     sortOrder = SortOrder.Descending).Summary()\n(***include-output***)\n\n(**\nSearch for \u0060\u0022Hello World\u0022\u0060 text that should not match any series.\n*)\nmyFred.Series.Search(\u0022Hello World\u0022).Summary()\n(***include-output***)\n\n(**\n### F# Data FRED: Series.Info\nGet the information for an economic data series.\n\nThis method only asks for the series id as a parameter (\u0060string\u0060)\n\nExamples:\n*)\n\n(**\nGet the information for series id = \u0060\u0022GS10\u0022\u0060\n*)\n\nmyFred.Series.Info \u0022GS10\u0022\n(***include-fsi-output***)\n\n(**\n### F# Data FRED: Series.Categories\nGet the categories for an economic data series.\n\nThe parameters are the following:\n\n1. **id**, required.  \n    The id for a series (\u0060string\u0060).\n1. **realtimeStart**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n1. **realtimeEnd**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n\n\nExamples:\n*)\n\n(**\nGet the category information for series id = \u0060\u0022GS10\u0022\u0060\n*)\nmyFred.Series.Categories \u0022GS10\u0022\n(***include-fsi-output***)\n\n(**\nYou can also access the category fields with \u0060Array.map\u0060:\n*)\nmyFred.Series.Categories(\u0022GS10\u0022).Categories\n|\u003E Array.map(fun x -\u003E x.Name)\n(***include-fsi-output***)\n\n(**\n### F# Data FRED: Series.Release\n Get the release for an economic data series.\n\nThe parameters are the following:\n\n1. **id**, required.  \n    The id for a series (\u0060string\u0060).\n1. **realtimeStart**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n1. **realtimeEnd**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n\nExamples:\n*)\n\n(**\nGet the release information for series id = \u0060\u0022GS10\u0022\u0060\n*)\nmyFred.Series.Release \u0022GS10\u0022\n(***include-fsi-output***)\n\n(**\n### F# Data FRED: Series.Tags\nGet the FRED tags for a series.\n\nThe parameters are the following:\n\n1. **id**, required.  \n    The id for a series (\u0060string\u0060).\n1. **realtimeStart**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n1. **realtimeEnd**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n1. **orderBy**, optional. Default: \u0060OrderByTags.SeriesCount\u0060.\n    Order results by values of the specified attribute.\n    One of the following:  \n    \u0060OrderByTags.SeriesCount\u0060, \u0060OrderByTags.Popularity\u0060, \u0060OrderByTags.Created\u0060, \u0060OrderByTags.Name\u0060, \u0060OrderByTags.GroupId\u0060.\n1. **sortOrder**, optional. Default: \u0060SortOrder.Ascending\u0060.\n    Sort results is ascending or descending order for attribute values specified by \u0060orderBy\u0060.  \n\nExamples:\n*)\n\n(**\nGet the first 3 tags information for series id = \u0060\u0022GS10\u0022\u0060 without specifying any optional parameters.\n*)\nmyFred.Series.Tags(\u0022GS10\u0022).Tags\n|\u003E Array.truncate 3 \n(***include-fsi-output***)\n\n(**\nGet the first 3 tags information for series id = \u0060\u0022GS10\u0022\u0060 specifying some optional parameters.\n*)\nmyFred.Series.Tags(\u0022GS10\u0022, orderBy = OrderByTags.PopularityTags, sortOrder = SortOrder.Descending).Tags\n|\u003E Array.truncate 3 \n(***include-fsi-output***)\n\n(**\n### F# Data FRED: Series.Observations\nGet the observations or data values for an economic data series.\n\nThe parameters are the following:\n\n1. **id**, required.  \n    The id for a series (\u0060string\u0060).\n1. **realtimeStart**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n1. **realtimeEnd**, optional. Default: today\u0027s date.  \n    The start of the real-time period. For more information, see [Real-Time Periods](https://fred.stlouisfed.org/docs/api/fred/realtime_period.html).\n1. **limit**, optional. Default: \u00601000\u0060.  \n    The maximum number of results to return.\n    integer between \u00601\u0060 and \u00601000\u0060.\n1. **sortOrder**, optional. Default: \u0060SortOrder.Ascending\u0060.  \n    Sort results is ascending or descending observation date order.\n1. **observationStart**, optional. Default: \u0060DateTime(1776,07,04)\u0060 (earliest available).  \n    The start of the observation period. \u0060DateTime(yyyy,MM,dd)\u0060 formatted \u0060DateTime\u0060.\n1. **observationEnd**, optional. Default: today\u0027s date.   \u0060DateTime(9999,12,31)\u0060 (latest available).  \n    The end of the observation period. \u0060DateTime(yyyy,MM,dd)\u0060 formatted \u0060DateTime\u0060.\n1. **units**, optional. Default: \u0060Units.Levels\u0060 (No transformation).  \n    A key that indicates a data value transformation.\n    One of the following:   \n    \u0060Units.Levels\u0060\n    \u0060Units.Change\u0060\n    \u0060Units.ChangefromYearAgo\u0060\n    \u0060Units.PercentChange\u0060\n    \u0060Units.PercentChangefromYearAgo\u0060\n    \u0060Units.CompoundedAnnualRateofChange\u0060\n    \u0060Units.ContinuouslyCompoundedRateofChange\u0060\n    \u0060Units.ContinuouslyCompoundedAnnualRateofChange\u0060\n    \u0060Units.NaturalLog\u0060.  \n    [Unit transformation formulas](https://alfred.stlouisfed.org/help#growth_formulas)\n1. **frequency**, optional.  \n    An optional parameter that indicates a lower frequency to aggregate values to. \n    The FRED frequency aggregation feature converts higher frequency data series into lower frequency \n    data series (e.g. converts a monthly data series into an annual data series). \n    In FRED, the highest frequency data is daily, and the lowest frequency data is annual. \n    There are 3 aggregation methods available- average, sum, and end of period. \n    [See the aggregation_method parameter.](https://fred.stlouisfed.org/docs/api/fred/series_observations.html#aggregation_method)  \n    One of the following: \n    \u0060Frequency.Daily\u0060, \u0060Frequency.Weekly\u0060, \u0060Frequency.Biweekly\u0060, \u0060Frequency.Monthly\u0060, \u0060Frequency.Quarterly\u0060, \n    \u0060Frequency.Semiannual\u0060, \u0060Frequency.Annual\u0060, \u0060Frequency.WeeklyEndingFriday\u0060,\n    \u0060Frequency.WeeklyEndingThursday\u0060, \u0060Frequency.WeeklyEndingWednesday\u0060, \u0060Frequency.WeeklyEndingTuesday\u0060, \n    \u0060Frequency.WeeklyEndingMonday\u0060, \u0060Frequency.WeeklyEndingSunday\u0060, \u0060Frequency.WeeklyEndingSaturday\u0060, \n    \u0060Frequency.BiweeklyEndingWednesday\u0060, \u0060Frequency.BiweeklyEndingMonday\u0060.\n1. **aggMethod**, optional. Default: \u0060AggMethod.Average.\u0060  \n    A key that indicates the aggregation method used for frequency aggregation. \n    This parameter has no affect if the [frequency parameter](https://fred.stlouisfed.org/docs/api/fred/series_observations.html#frequency) is not set.\n    One of the following:\n    \u0060AggMethod.Average\u0060, \u0060AggMethod.Sum\u0060, \u0060AggMethod.EndOfPeriod\u0060.\n\nExamples:\n*)\n\n(**\nGet the observations for \u0060\u0022GS10\u0022\u0060 series without specifying any optional parameters.\n*)\nmyFred.Series.Observations(\u0022GS10\u0022).Observations\n|\u003E Seq.truncate 3 \n(***include-fsi-output***)\n\n(**\nGet the observations for \u0060\u0022DTP10J25\u0022\u0060 with a semi-annual frequency.\n*)\nmyFred.Series.Observations(\u0022DTP10J25\u0022, frequency = Frequency.Semiannual).Observations\n|\u003E Seq.truncate 3 \n(***include-fsi-output***)"}]